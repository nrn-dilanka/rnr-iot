#!/bin/bash

echo "üîß Fixing API Documentation 404 Error"
echo "====================================="

# Test nginx configuration
echo "üìù Testing nginx configuration..."
sudo nginx -t
if [ $? -ne 0 ]; then
    echo "‚ùå Nginx configuration test failed!"
    exit 1
fi

echo "‚úÖ Nginx configuration is valid"

# Reload nginx
echo "üîÑ Reloading nginx..."
sudo systemctl reload nginx

# Restart API server
echo "üîÑ Restarting API server..."
docker-compose restart rnr_api_server

# Wait for services
echo "‚è≥ Waiting for services to start..."
sleep 8

echo ""
echo "üß™ Testing endpoints..."

# Test the API server directly
echo "Testing API server health..."
API_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/health)
if [ "$API_RESPONSE" = "200" ]; then
    echo "‚úÖ API server is running"
else
    echo "‚ùå API server not responding (HTTP $API_RESPONSE)"
fi

# Test docs endpoint on API server directly
echo "Testing docs on API server..."
DOCS_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/docs)
if [ "$DOCS_RESPONSE" = "200" ]; then
    echo "‚úÖ Docs endpoint works on API server"
else
    echo "‚ùå Docs endpoint not working on API server (HTTP $DOCS_RESPONSE)"
fi

# Test openapi.json
echo "Testing OpenAPI JSON..."
OPENAPI_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8000/openapi.json)
if [ "$OPENAPI_RESPONSE" = "200" ]; then
    echo "‚úÖ OpenAPI JSON endpoint works"
else
    echo "‚ùå OpenAPI JSON not working (HTTP $OPENAPI_RESPONSE)"
fi

echo ""
echo "üåê External access URLs:"
PUBLIC_IP=$(curl -s ifconfig.me || echo "YOUR_SERVER_IP")
echo "   ‚Ä¢ Main docs: http://$PUBLIC_IP/docs"
echo "   ‚Ä¢ API docs:  http://$PUBLIC_IP/api/docs"
echo "   ‚Ä¢ ReDoc:     http://$PUBLIC_IP/api/redoc"
echo ""
echo "üèÅ Fix complete! Try accessing the docs now."
