services:
  # RNR Solutions - RabbitMQ Message Broker with MQTT plugin (Optimized for 2GB RAM)
  rnr_rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rnr_iot_rabbitmq
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
      - "1883:1883"    # MQTT port
    environment:
      RABBITMQ_DEFAULT_USER: rnr_iot_user
      RABBITMQ_DEFAULT_PASS: rnr_iot_2025!
      RABBITMQ_DEFAULT_VHOST: rnr_iot_vhost
    volumes:
      - rnr_rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    networks:
      - rnr_iot_network
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 150M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # RNR Solutions - PostgreSQL Database (Optimized for 2GB RAM)
  rnr_postgres:
    image: postgres:15-alpine
    container_name: rnr_iot_postgres
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB: rnr_iot_platform
      POSTGRES_USER: rnr_iot_user
      POSTGRES_PASSWORD: rnr_iot_2025!
      # PostgreSQL memory optimization
      POSTGRES_SHARED_BUFFERS: 64MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 128MB
      POSTGRES_WORK_MEM: 2MB
      POSTGRES_MAINTENANCE_WORK_MEM: 16MB
    volumes:
      - rnr_postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rnr_iot_network
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rnr_iot_user -d rnr_iot_platform"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 30s

  # RNR Solutions - Backend API Server (Optimized for 2GB RAM)
  rnr_api_server:
    build: 
      context: ./backend
      dockerfile: Dockerfile.api
    container_name: rnr_iot_api_server
    ports:
      - "3005:8000"
    env_file:
      - .env
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://rnr_iot_user:rnr_iot_2025!@rnr_postgres:5432/rnr_iot_platform
      RABBITMQ_URL: amqp://rnr_iot_user:rnr_iot_2025!@rnr_rabbitmq:5672/rnr_iot_vhost
      UPLOAD_DIR: /app/uploads
      GEMINI_API_KEY: AIzaSyAs2JqPjvUcWeg5K2Vxeto7j37GzUzABUY
      RNR_COMPANY_NAME: "RNR Solutions"
      RNR_PLATFORM_VERSION: "2.0.0"
      # MQTT Configuration
      MQTT_BROKER_HOST: "16.171.30.3"
      MQTT_BROKER_PORT: "1883"
      MQTT_USERNAME: "rnr_iot_user"
      MQTT_PASSWORD: "rnr_iot_2025!"
      MQTT_MAX_RETRIES: "3"
      MQTT_RETRY_DELAY: "5"
      MQTT_CONNECTION_TIMEOUT: "10"
      # Python memory optimization
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    volumes:
      - rnr_firmware_uploads:/app/uploads
    depends_on:
      rnr_postgres:
        condition: service_healthy
      rnr_rabbitmq:
        condition: service_healthy
    networks:
      - rnr_iot_network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # RNR Solutions - Core Worker Service (Optimized for 2GB RAM)
  rnr_worker_service:
    build:
      context: ./backend
      dockerfile: Dockerfile.worker
    container_name: rnr_iot_worker_service
    env_file:
      - .env
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://rnr_iot_user:rnr_iot_2025!@rnr_postgres:5432/rnr_iot_platform
      RABBITMQ_URL: amqp://rnr_iot_user:rnr_iot_2025!@rnr_rabbitmq:5672/rnr_iot_vhost
      API_URL: http://rnr_api_server:8000
      GEMINI_API_KEY: AIzaSyAs2JqPjvUcWeg5K2Vxeto7j37GzUzABUY
      RNR_COMPANY_NAME: "RNR Solutions"
      RNR_PLATFORM_VERSION: "2.0.0"
      # MQTT Configuration (same as API server)
      MQTT_BROKER_HOST: "16.171.30.3"
      MQTT_BROKER_PORT: "1883"
      MQTT_USERNAME: "rnr_iot_user"
      MQTT_PASSWORD: "rnr_iot_2025!"
      MQTT_MAX_RETRIES: "3"
      MQTT_RETRY_DELAY: "5"
      MQTT_CONNECTION_TIMEOUT: "10"
      # Python memory optimization
      PYTHONUNBUFFERED: 1
      PYTHONDONTWRITEBYTECODE: 1
    depends_on:
      rnr_postgres:
        condition: service_healthy
      rnr_rabbitmq:
        condition: service_healthy
    networks:
      - rnr_iot_network
    deploy:
      resources:
        limits:
          memory: 384M
        reservations:
          memory: 192M
    restart: unless-stopped

volumes:
  rnr_rabbitmq_data:
    driver: local
  rnr_postgres_data:
    driver: local
  rnr_firmware_uploads:
    driver: local

networks:
  rnr_iot_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
